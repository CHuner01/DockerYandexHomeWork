name: Release

on:
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint
      - run: npm test

  release:
    needs: lint-and-test
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.run_number }}
      REGISTRY: cr.yandex/${{ secrets.YCR_REGISTRY_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Create release branch
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b releases/${{ env.VERSION }}
          git remote set-url origin https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/CHuner01/DockerYandexHomeWork.git
          git push origin releases/${{ env.VERSION }}

      - name: Docker login
        run: echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login --username iam --password-stdin cr.yandex


      - name: Build Docker image
        run: |
          docker build -t $REGISTRY/app:${VERSION} .
          docker tag $REGISTRY/app:${VERSION} $REGISTRY/app:${VERSION}_latest

      - name: Push Docker image
        run: |
          docker push $REGISTRY/app:${VERSION}
          docker push $REGISTRY/app:${VERSION}_latest

      - name: Create git tag
        run: |
          git tag v${VERSION}
          git remote set-url origin https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/CHuner01/DockerYandexHomeWork.git
          git push origin v${VERSION}

      - name: Get commit list since last tag
        id: changelog
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline)
          else
            COMMITS=$(git log --oneline ${LAST_TAG}..HEAD)
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Release ${{ env.VERSION }}
          content-file: ./release.md
          labels: release
        env:
          COMMITS: ${{ steps.changelog.outputs.commits }}

      - name: Update CHANGELOG.md
        run: |
          echo -e "## Version $VERSION\n\n${{ steps.changelog.outputs.commits }}\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for version $VERSION"
          git remote set-url origin https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/CHuner01/DockerYandexHomeWork.git
          git push
